name: Deploy

on:
  push:
    branches: [main]

jobs:
  terraform-and-web:
    name: Terraform & Web
    if: github.repository_owner == 'Axedyson'
    runs-on: ubuntu-latest
    outputs:
      ipv4_address: ${{ steps.ipv4_address_output.outputs.ipv4_address }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DO_PVT_SSH_KEY }}
      - name: Terraform Init
        run: terraform init
      - name: Terraform Apply
        run: terraform apply -auto-approve -lock-timeout=5h
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
          VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
          TF_VAR_SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      - name: Output ipv4_address of droplet
        id: ipv4_address_output
        run: echo "::set-output name=ipv4_address::$(terraform output -raw ipv4_address)"

  build-server-image:
    name: Build Server Image
    if: github.repository_owner == 'Axedyson'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
    outputs:
      image: ${{ steps.docker-image-name-output.outputs.image }}
      changes: ${{ steps.changes.outputs.server }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Check for changed server files
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            server:
              - 'yarn.lock'
              - 'packages/server/package.json'
              - 'packages/server/tsconfig.json'
              - 'packages/server/src/**'
              - 'packages/server/Dockerfile'
      - name: Log in to the Container registry
        if: steps.changes.outputs.server == 'true'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: $GITHUB_REPOSITORY_OWNER
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        if: steps.changes.outputs.server == 'true'
        uses: docker/setup-buildx-action@v2
      - name: Lowercase github.repository environment variable for docker
        if: steps.changes.outputs.server == 'true'
        id: gh_repo_lc
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}
      - name: Build and push Docker image
        if: steps.changes.outputs.server == 'true'
        id: docker-build
        uses: docker/build-push-action@v3
        with:
          push: true
          file: packages/server/Dockerfile
          tags: ${{ env.REGISTRY }}/${{ steps.gh_repo_lc.outputs.lowercase }}-server:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ steps.gh_repo_lc.outputs.lowercase }}-server:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ steps.gh_repo_lc.outputs.lowercase }}-server:buildcache,mode=max
      - name: Output docker image name
        if: steps.changes.outputs.server == 'true'
        id: docker-image-name-output
        run: echo "::set-output name=image::${{ env.REGISTRY }}/${{ steps.gh_repo_lc.outputs.lowercase }}-server@${{ steps.docker-build.outputs.digest }}"

  deploy-server-image:
    name: Server Image
    if: needs.build-server-image.outputs.changes == 'true'
    runs-on: ubuntu-latest
    needs: [terraform-and-web, build-server-image]

    steps:
      - name: Deploy Docker Server Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ needs.terraform-and-web.outputs.ipv4_address }}
          username: root
          key: ${{ secrets.DO_PVT_SSH_KEY }}
          script: dokku git:from-image server ${{ needs.build-server-image.outputs.image }}
